% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotMultiSeries_units.R
\name{plotMultiSeries_units}
\alias{plotMultiSeries_units}
\title{plotMultiSeries_units}
\usage{
plotMultiSeries_units(x, y1, y2, domain = NULL, x_name = "x",
  x_unit = NULL, y1_name = "y1", y1_unit = NULL, y1_color = "red",
  y2_name = "y2", y2_unit = NULL, y2_color = "blue", title = NULL,
  add_legend = FALSE)
}
\arguments{
\item{x}{Shared x data (key).}

\item{y1}{First series.}

\item{y2}{Second series.}

\item{domain}{Defaults to domain of x axis.}

\item{x_name}{Defaults to "x".}

\item{x_unit}{Defaults to NULL.}

\item{y1_name}{Defaults to "y1".}

\item{y1_unit}{Defaults to NULL.}

\item{y1_color}{Defaults to "red".}

\item{y2_name}{Defaults to "y2".}

\item{y2_unit}{Defaults to NULL.}

\item{y2_color}{Defaults to "blue".}

\item{title}{Title of plot. Defaults to "y1_name (y1_unit) and y2_name (y2_unit) vs x_name (x_unit)".}

\item{add_legend}{Defaults to FALSE.}
}
\description{
Plots two series with different units that share a common key.
Works best with interpolated data; balloonMergeDatasets(y1, y2, interpolate = TRUE)
Inspired by http://stackoverflow.com/questions/6142944/how-can-i-plot-with-2-different-y-axes
}
\examples{
library(balloonDataAnaylsis)
tlm_data <- balloonParseData("NS57_parsedPackets.txt", "LINK-TLM")
irene_data <- balloonParseData("NS57LaunchData.txt", "IRENE")
joined_data <- balloonMergeDatasets(tlm_data, irene_data, interpolate = TRUE)
plotMultiSeries_units(
    joined_data$Timestamp,
    joined_data$Counts_Per_Minute,
    joined_data$Altitude_m,
    domain = c(min(tlm_data$Timestamp), max(tlm_data$Timestamp)),
    x_name = "Time",
    x_unit = "24hr",
    y1_name = "Geiger Counter",
    y1_unit = "counts per minute",
    y2_name = "Altitude",
    y2_unit = "meters",
    add_legend = TRUE
)
}

